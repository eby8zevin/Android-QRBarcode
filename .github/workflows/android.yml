name: Android CI

on:
  push:
    branches:
      - development
      - master
      - /^internal-testing\/.*$/
  workflow_dispatch:

env:
  KEYSTORE_FILE: keystore-qrbarcode.jks
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

jobs:
  build-bundle:
    name: Build AAB
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Bundler & Fastlane
        run: |
          gem install bundler
          bundle install

      - name: Setup local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          echo "KEYSTORE_FILE=$KEYSTORE_FILE" >> local.properties
          echo "KEYSTORE_PASSWORD=$KEYSTORE_PASSWORD" >> local.properties
          echo "KEY_ALIAS=$KEY_ALIAS" >> local.properties
          echo "KEY_PASSWORD=$KEY_PASSWORD" >> local.properties

      - name: Decode keystore file
        run: echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > $KEYSTORE_FILE

      - name: Create Service Account JSON (base64)
        run: |
          mkdir -p app
          echo "${{ secrets.GOOGLE_PLAY_JSON }}" | base64 --decode > app/qrbarcode-8b0b8-aaefa03b2374.json

      - name: Run buildBundle lane
        run: bundle exec fastlane buildBundle

      - name: Upload Bundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: app/build/outputs/bundle/release/*.aab

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build-bundle

    steps:
      - uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Run Fastlane Test
        run: |
          gem install bundler
          bundle install
          bundle exec fastlane test

  code-analysis:
    name: Lint & Check
    runs-on: ubuntu-latest
    needs: build-bundle

    steps:
      - uses: actions/checkout@v3
      - name: Run Lint
        run: ./gradlew clean check
      - uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: |
            app/build/reports/**/*.html
            app/build/intermediates/lint_intermediate_text_report/debug/*.txt
            app/build/reports/lint-baseline.xml

  deploy-release:
    name: Deploy to Play Store (Production)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: build-bundle

    steps:
      - uses: actions/checkout@v3
      - name: Setup
        run: |
          gem install bundler
          bundle install
          echo "${{ secrets.GOOGLE_PLAY_JSON }}" | base64 --decode > app/qrbarcode-8b0b8-aaefa03b2374.json
      - name: Deploy
        run: bundle exec fastlane deployRelease

  deploy-beta:
    name: Deploy to Play Store (Beta)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    needs: build-bundle

    steps:
      - uses: actions/checkout@v3
      - name: Setup
        run: |
          gem install bundler
          bundle install
          echo "${{ secrets.GOOGLE_PLAY_JSON }}" | base64 --decode > app/qrbarcode-8b0b8-aaefa03b2374.json
      - name: Deploy
        run: bundle exec fastlane deployBeta

  deploy-firebase-beta:
    name: Distribute via Firebase (Beta)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    needs: build-bundle

    steps:
      - uses: actions/checkout@v3
      - name: Setup
        run: |
          gem install bundler
          bundle install
      - name: Deploy
        run: bundle exec fastlane deployFirebaseBeta

  deploy-firebase-internal:
    name: Distribute via Firebase (Internal)
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/internal-testing/')
    needs: build-bundle

    steps:
      - uses: actions/checkout@v3
      - name: Setup
        run: |
          gem install bundler
          bundle install
      - name: Deploy
        run: bundle exec fastlane deployFirebase --verbose
